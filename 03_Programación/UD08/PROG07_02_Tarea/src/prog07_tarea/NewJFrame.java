/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package prog07_tarea;

import javax.swing.JOptionPane;
import prog07_tarea.cuentas.*;
import prog07_tarea_util.Validar;

/*
Autor: Jesús Alfonso Porto Bujía
Descripción: Clase que genera una interfaz a través de la clase JFrame. Se trata de un menú, con diferentes submenús para realizar las funcionalidades requeridas por el enunciado:
Abrir una nueva cuenta, ver un listado de las cuentas disponibles,obtener los datos de una cuenta concreta, realizar un ingreso,retirar efectivo,consultar el saldo 
y salir de la aplicación.También se incluyen diversos métodos para validar que los campos no estén vacíos, que se introduzcan números donde corresponde y que se respete
el formato requerido de IBAN y DNI (Debido a la cantidad de código de validación, lo he introducido en menús que se pueden ocultar para una mejor estructuración y comprensión). 
Mediante la clase JOptionPane, la aplicación proporciona mensajes informativos y de error. La clase tiene también un constructor que pide como parámetro un atributo banco.
De acuerdo con la tarea de la unidad 8, incluyo una nueva sección con un JComboBox, donde se van añadiendo las cuentas según se van creando.  Si se desea eliminar alguna cuenta
se selecciona a través de este JComboBox, y se le da al botón de Eliminar.
 */
public class NewJFrame extends javax.swing.JFrame {

    //Constructor con un parámetro objeto banco donde se define como se muestra el menú inicial
    public NewJFrame(Banco b) {
        initComponents();
        banco = b;
        PanelAbrirNuevaCuenta.setVisible(false);
        MenuCuentaAhorro.setVisible(false);
        MenuCuentaCorrientePersonal.setVisible(false);
        MenuCuentaCorrienteEmpresa.setVisible(false);

        MenuIBAN.setVisible(false);
        botonIngresar.setVisible(false);
        botonConsultar.setVisible(false);
        botonObtener.setVisible(false);
        botonRetirar.setVisible(false);
        MenuCantidad.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jInternalFrame1 = new javax.swing.JInternalFrame();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        GrupoCuentas = new javax.swing.ButtonGroup();
        abrirNuevaCuenta = new javax.swing.JButton();
        PanelAbrirNuevaCuenta = new javax.swing.JPanel();
        campoApellidos = new javax.swing.JTextField();
        campoNombre = new javax.swing.JTextField();
        campoDNI = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        botonRadioCuentaCorrienteEmpresa = new javax.swing.JRadioButton();
        botonRadioCuentaAhorro = new javax.swing.JRadioButton();
        botonRadioCuentaCorrientePersonal = new javax.swing.JRadioButton();
        campoSaldoInicial = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        campoIBAN = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        MenuCuentaAhorro = new javax.swing.JPanel();
        campoTipoInteres = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        MenuCuentaCorrientePersonal = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        campoComisionMantenimiento = new javax.swing.JTextField();
        validarCuentaAnadir = new javax.swing.JButton();
        MenuCuentaCorrienteEmpresa = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        campoTipoInteresDescubierto = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        campoMaximoDescubiertoPermitido = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        campoComisionFijaDescubierto = new javax.swing.JTextField();
        listadoCuentas = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        botonObtenerMostrar = new javax.swing.JButton();
        MenuIBAN = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        campoIBANOperaciones = new javax.swing.JTextField();
        botonRealizarIngresoMostrar = new javax.swing.JButton();
        botonRetirarEfectivoMostrar = new javax.swing.JButton();
        botonConsultarSaldoMostrar = new javax.swing.JButton();
        botonRetirar = new javax.swing.JButton();
        botonConsultar = new javax.swing.JButton();
        botonIngresar = new javax.swing.JButton();
        botonObtener = new javax.swing.JButton();
        MenuCantidad = new javax.swing.JPanel();
        campoCantidad = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Salir = new javax.swing.JButton();
        ListadoCuentas = new javax.swing.JComboBox<>();
        Eliminar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 96, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 91, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 150, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 178, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 138, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        abrirNuevaCuenta.setText("Abrir una nueva cuenta");
        abrirNuevaCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirNuevaCuentaActionPerformed(evt);
            }
        });

        PanelAbrirNuevaCuenta.setForeground(new java.awt.Color(255, 255, 255));
        PanelAbrirNuevaCuenta.setToolTipText("");

        jLabel1.setText("Nombre");

        jLabel2.setText("Apellidos");

        jLabel3.setText("DNI");

        GrupoCuentas.add(botonRadioCuentaCorrienteEmpresa);
        botonRadioCuentaCorrienteEmpresa.setText("Cuenta corriente empresa");
        botonRadioCuentaCorrienteEmpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRadioCuentaCorrienteEmpresaActionPerformed(evt);
            }
        });

        GrupoCuentas.add(botonRadioCuentaAhorro);
        botonRadioCuentaAhorro.setText("Cuenta de ahorro");
        botonRadioCuentaAhorro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRadioCuentaAhorroActionPerformed(evt);
            }
        });

        GrupoCuentas.add(botonRadioCuentaCorrientePersonal);
        botonRadioCuentaCorrientePersonal.setText("Cuenta corriente personal");
        botonRadioCuentaCorrientePersonal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRadioCuentaCorrientePersonalActionPerformed(evt);
            }
        });

        jLabel4.setText("Saldo inicial");

        jLabel5.setText("IBAN");

        jLabel7.setText("Tipo de interés");

        javax.swing.GroupLayout MenuCuentaAhorroLayout = new javax.swing.GroupLayout(MenuCuentaAhorro);
        MenuCuentaAhorro.setLayout(MenuCuentaAhorroLayout);
        MenuCuentaAhorroLayout.setHorizontalGroup(
            MenuCuentaAhorroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuCuentaAhorroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoTipoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(136, 136, 136))
        );
        MenuCuentaAhorroLayout.setVerticalGroup(
            MenuCuentaAhorroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCuentaAhorroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(campoTipoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jLabel8.setText("Comisión de mantenimiento");

        javax.swing.GroupLayout MenuCuentaCorrientePersonalLayout = new javax.swing.GroupLayout(MenuCuentaCorrientePersonal);
        MenuCuentaCorrientePersonal.setLayout(MenuCuentaCorrientePersonalLayout);
        MenuCuentaCorrientePersonalLayout.setHorizontalGroup(
            MenuCuentaCorrientePersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCuentaCorrientePersonalLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(campoComisionMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuCuentaCorrientePersonalLayout.setVerticalGroup(
            MenuCuentaCorrientePersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCuentaCorrientePersonalLayout.createSequentialGroup()
                .addGroup(MenuCuentaCorrientePersonalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoComisionMantenimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        validarCuentaAnadir.setText("Validar cuenta y añadir");
        validarCuentaAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validarCuentaAnadirActionPerformed(evt);
            }
        });

        jLabel10.setText("Tipo de interés por descubierto");

        campoTipoInteresDescubierto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoTipoInteresDescubiertoActionPerformed(evt);
            }
        });

        jLabel11.setText("Máximo descubierto permitido");

        campoMaximoDescubiertoPermitido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoMaximoDescubiertoPermitidoActionPerformed(evt);
            }
        });

        jLabel12.setText("Comisión fija por descubierto");

        javax.swing.GroupLayout MenuCuentaCorrienteEmpresaLayout = new javax.swing.GroupLayout(MenuCuentaCorrienteEmpresa);
        MenuCuentaCorrienteEmpresa.setLayout(MenuCuentaCorrienteEmpresaLayout);
        MenuCuentaCorrienteEmpresaLayout.setHorizontalGroup(
            MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCuentaCorrienteEmpresaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(campoTipoInteresDescubierto, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoMaximoDescubiertoPermitido, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoComisionFijaDescubierto, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        MenuCuentaCorrienteEmpresaLayout.setVerticalGroup(
            MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCuentaCorrienteEmpresaLayout.createSequentialGroup()
                .addGroup(MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoTipoInteresDescubierto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoMaximoDescubiertoPermitido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(MenuCuentaCorrienteEmpresaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoComisionFijaDescubierto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout PanelAbrirNuevaCuentaLayout = new javax.swing.GroupLayout(PanelAbrirNuevaCuenta);
        PanelAbrirNuevaCuenta.setLayout(PanelAbrirNuevaCuentaLayout);
        PanelAbrirNuevaCuentaLayout.setHorizontalGroup(
            PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAbrirNuevaCuentaLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(validarCuentaAnadir)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAbrirNuevaCuentaLayout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAbrirNuevaCuentaLayout.createSequentialGroup()
                        .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campoNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(botonRadioCuentaAhorro)
                            .addComponent(botonRadioCuentaCorrientePersonal)
                            .addComponent(botonRadioCuentaCorrienteEmpresa)
                            .addComponent(campoSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(campoDNI, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(campoApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                            .addComponent(campoIBAN))
                        .addGap(56, 56, 56))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelAbrirNuevaCuentaLayout.createSequentialGroup()
                        .addComponent(MenuCuentaCorrienteEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66))))
            .addGroup(PanelAbrirNuevaCuentaLayout.createSequentialGroup()
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(MenuCuentaAhorro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MenuCuentaCorrientePersonal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        PanelAbrirNuevaCuentaLayout.setVerticalGroup(
            PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAbrirNuevaCuentaLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonRadioCuentaAhorro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonRadioCuentaCorrientePersonal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonRadioCuentaCorrienteEmpresa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoSaldoInicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelAbrirNuevaCuentaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoIBAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(13, 13, 13)
                .addComponent(MenuCuentaAhorro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MenuCuentaCorrientePersonal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(MenuCuentaCorrienteEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(validarCuentaAnadir)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        listadoCuentas.setText("Listado de cuentas");
        listadoCuentas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listadoCuentasActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        botonObtenerMostrar.setText("Obtener datos de una cuenta");
        botonObtenerMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonObtenerMostrarActionPerformed(evt);
            }
        });

        jLabel6.setText("IBAN");

        javax.swing.GroupLayout MenuIBANLayout = new javax.swing.GroupLayout(MenuIBAN);
        MenuIBAN.setLayout(MenuIBANLayout);
        MenuIBANLayout.setHorizontalGroup(
            MenuIBANLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuIBANLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoIBANOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuIBANLayout.setVerticalGroup(
            MenuIBANLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuIBANLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuIBANLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(campoIBANOperaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botonRealizarIngresoMostrar.setText("Realizar ingreso");
        botonRealizarIngresoMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRealizarIngresoMostrarActionPerformed(evt);
            }
        });

        botonRetirarEfectivoMostrar.setText("Retirar efectivo");
        botonRetirarEfectivoMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRetirarEfectivoMostrarActionPerformed(evt);
            }
        });

        botonConsultarSaldoMostrar.setText("Consultar saldo");
        botonConsultarSaldoMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarSaldoMostrarActionPerformed(evt);
            }
        });

        botonRetirar.setText("Retirar");
        botonRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonRetirarActionPerformed(evt);
            }
        });

        botonConsultar.setText("Consultar");
        botonConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsultarActionPerformed(evt);
            }
        });

        botonIngresar.setText("Ingresar");
        botonIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonIngresarActionPerformed(evt);
            }
        });

        botonObtener.setText("Obtener");
        botonObtener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonObtenerActionPerformed(evt);
            }
        });

        jLabel9.setText("Cantidad");

        javax.swing.GroupLayout MenuCantidadLayout = new javax.swing.GroupLayout(MenuCantidad);
        MenuCantidad.setLayout(MenuCantidadLayout);
        MenuCantidadLayout.setHorizontalGroup(
            MenuCantidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MenuCantidadLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        MenuCantidadLayout.setVerticalGroup(
            MenuCantidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuCantidadLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuCantidadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campoCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        Salir.setText("Salir");
        Salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirActionPerformed(evt);
            }
        });

        Eliminar.setText("Eliminar");
        Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EliminarActionPerformed(evt);
            }
        });

        jLabel13.setText("Eliminación de cuentas");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MenuIBAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MenuCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonRetirar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonIngresar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(botonConsultar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonObtener))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(abrirNuevaCuenta)
                                        .addGap(200, 200, 200)
                                        .addComponent(Salir))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(botonObtenerMostrar)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonRealizarIngresoMostrar)
                                        .addGap(18, 18, 18)
                                        .addComponent(botonRetirarEfectivoMostrar)))
                                .addGap(18, 18, 18)
                                .addComponent(botonConsultarSaldoMostrar))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(listadoCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(PanelAbrirNuevaCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ListadoCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(Eliminar))
                            .addComponent(jLabel13))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(abrirNuevaCuenta)
                            .addComponent(Salir))
                        .addGap(17, 17, 17)
                        .addComponent(listadoCuentas)
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonObtenerMostrar)
                            .addComponent(botonRealizarIngresoMostrar)
                            .addComponent(botonRetirarEfectivoMostrar)
                            .addComponent(botonConsultarSaldoMostrar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(MenuIBAN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(botonRetirar)
                                    .addComponent(botonIngresar)))
                            .addComponent(MenuCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonConsultar)
                            .addComponent(botonObtener))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(35, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(PanelAbrirNuevaCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ListadoCuentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Eliminar))
                        .addGap(127, 127, 127))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Método para mostrar los diferentes submenus para abrir una cuenta que se acciona al pulsar un botón 
    private void abrirNuevaCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirNuevaCuentaActionPerformed
        if (!PanelAbrirNuevaCuenta.isVisible()) {
            PanelAbrirNuevaCuenta.setVisible(true);
            botonRadioCuentaAhorro.setSelected(true);
            MenuCuentaAhorro.setVisible(true);
        } else {
            PanelAbrirNuevaCuenta.setVisible(false);
        };

    }//GEN-LAST:event_abrirNuevaCuentaActionPerformed

    //Método para mostrar el submenu de cuenta corriente personal que se acciona al pulsar el correspondiente botón radio 
    private void botonRadioCuentaCorrientePersonalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRadioCuentaCorrientePersonalActionPerformed

        MenuCuentaCorrientePersonal.setVisible(true);
        MenuCuentaAhorro.setVisible(false);
        MenuCuentaCorrienteEmpresa.setVisible(false);

    }//GEN-LAST:event_botonRadioCuentaCorrientePersonalActionPerformed

    //Método para mostrar el submenu de cuenta ahorro que se acciona al pulsar el correspondiente botón radio 
    private void botonRadioCuentaAhorroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRadioCuentaAhorroActionPerformed
        MenuCuentaAhorro.setVisible(true);
        MenuCuentaCorrientePersonal.setVisible(false);
        MenuCuentaCorrienteEmpresa.setVisible(false);
    }//GEN-LAST:event_botonRadioCuentaAhorroActionPerformed

    //Método para mostrar el submenu de cuenta corriente empresa que se acciona al pulsar el correspondiente botón radio 
    private void botonRadioCuentaCorrienteEmpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRadioCuentaCorrienteEmpresaActionPerformed
        MenuCuentaAhorro.setVisible(false);
        MenuCuentaCorrientePersonal.setVisible(false);
        MenuCuentaCorrienteEmpresa.setVisible(true);
    }//GEN-LAST:event_botonRadioCuentaCorrienteEmpresaActionPerformed

    //Método para mostrar el listado de cuentas invovando al metodo del objeto banco, que se acciona al pulsar un botón 
    private void listadoCuentasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listadoCuentasActionPerformed
        jTextArea1.setText(banco.listadoCuentas());
    }//GEN-LAST:event_listadoCuentasActionPerformed

    /*Método para validar y añadir cuentas dependiendo de las opciones seleccionadas, que se acciona al pulsar un botón. 
    Cada vez que se añade una cuenta, se incluye en el JComboBox su número de IBAN, para poder eliminarla posteriormente si se desea.
     */

    private void validarCuentaAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validarCuentaAnadirActionPerformed
        if (botonRadioCuentaAhorro.isSelected()) {
            //Validación y creación cuenta ahorro
            if (validarNoVaciosGenerales() && validacionFormatoDNI(campoDNI.getText()) && validarSaldoInicial(campoSaldoInicial.getText()) && validacionFormatoIBAN(campoIBAN.getText()) && validarNoVacioCuentaAhorro() && validarTipoInteres(campoTipoInteres.getText())) {
                Persona persona = new Persona(campoNombre.getText(), campoApellidos.getText(), campoDNI.getText());
                CuentaAhorro cuentaAhorro = new CuentaAhorro(persona, Double.parseDouble(campoSaldoInicial.getText()), campoIBAN.getText(), Double.parseDouble(campoTipoInteres.getText()));

                if (banco.abrirCuenta(cuentaAhorro)) {
                    ListadoCuentas.addItem(cuentaAhorro.getIBAN());
                    JOptionPane.showMessageDialog(this, "Cuenta creada con éxito", "Información", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Cuenta ya existente", "Información", JOptionPane.INFORMATION_MESSAGE);
                }
                campoNombre.setText("");
                campoApellidos.setText("");
                campoDNI.setText("");
                campoSaldoInicial.setText("");
                campoIBAN.setText("");
                campoTipoInteres.setText("");
            }
        } //Validación y creación Cuenta Corriente Personal
        else if (botonRadioCuentaCorrientePersonal.isSelected()) {
            if (validarNoVaciosGenerales() && validacionFormatoDNI(campoDNI.getText()) && validarSaldoInicial(campoSaldoInicial.getText()) && validacionFormatoIBAN(campoIBAN.getText()) && validarNoVacioComisionMantenimiento() && validarComisionMantenimiento(campoComisionMantenimiento.getText())) {
                Persona persona = new Persona(campoNombre.getText(), campoApellidos.getText(), campoDNI.getText());
                CuentaCorrientePersonal cuentaCorrientePersonal = new CuentaCorrientePersonal(persona, Double.parseDouble(campoSaldoInicial.getText()), campoIBAN.getText(), Double.parseDouble(campoComisionMantenimiento.getText()));
                if (banco.abrirCuenta(cuentaCorrientePersonal)) {
                    ListadoCuentas.addItem(cuentaCorrientePersonal.getIBAN());
                    JOptionPane.showMessageDialog(this, "Cuenta creada con éxito", "Información", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(this, "Cuenta ya existente", "Información", JOptionPane.INFORMATION_MESSAGE);
                };

                campoNombre.setText("");
                campoApellidos.setText("");
                campoDNI.setText("");
                campoSaldoInicial.setText("");
                campoIBAN.setText("");
                campoComisionMantenimiento.setText("");
            }
        } //Validación y creación Cuenta Corriente Empresa
        else if (botonRadioCuentaCorrienteEmpresa.isSelected()) {
            if (validarNoVaciosGenerales() && validacionFormatoDNI(campoDNI.getText()) && validarSaldoInicial(campoSaldoInicial.getText()) && validacionFormatoIBAN(campoIBAN.getText()) && validarNoVaciosCuentaCorrienteEmpresa() && validarTipoInteresDescubierto(campoTipoInteresDescubierto.getText()) && validarMaximoDescubiertoPermitido(campoMaximoDescubiertoPermitido.getText()) && validarComisionFijaDescubierto(campoComisionFijaDescubierto.getText())) {
                {
                    Persona persona = new Persona(campoNombre.getText(), campoApellidos.getText(), campoDNI.getText());

                    CuentaCorrienteEmpresa cuentaCorrienteEmpresa = new CuentaCorrienteEmpresa(persona, Double.parseDouble(campoSaldoInicial.getText()), campoIBAN.getText(), Double.parseDouble(campoTipoInteresDescubierto.getText()), Double.parseDouble(campoMaximoDescubiertoPermitido.getText()), Double.parseDouble(campoComisionFijaDescubierto.getText()));
                    if (banco.abrirCuenta(cuentaCorrienteEmpresa)) {
                        ListadoCuentas.addItem(cuentaCorrienteEmpresa.getIBAN());
                        JOptionPane.showMessageDialog(this, "Cuenta creada con éxito", "Información", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(this, "Cuenta ya existente", "Información", JOptionPane.INFORMATION_MESSAGE);
                    }

                    campoNombre.setText("");
                    campoApellidos.setText("");
                    campoDNI.setText("");
                    campoSaldoInicial.setText("");
                    campoIBAN.setText("");
                    campoTipoInteresDescubierto.setText("");
                    campoMaximoDescubiertoPermitido.setText("");
                    campoComisionFijaDescubierto.setText("");
                }
            }
        }
    }//GEN-LAST:event_validarCuentaAnadirActionPerformed

    private void campoTipoInteresDescubiertoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoTipoInteresDescubiertoActionPerformed

    }//GEN-LAST:event_campoTipoInteresDescubiertoActionPerformed

    //Método para mostrar los submenus correspondientes, que se acciona al pulsar un botón 
    private void botonObtenerMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonObtenerMostrarActionPerformed
        jTextArea1.setText("");
        MenuIBAN.setVisible(true);
        MenuCantidad.setVisible(false);
        botonObtener.setVisible(true);
        botonIngresar.setVisible(false);
        botonRetirar.setVisible(false);
        botonConsultar.setVisible(false);
    }//GEN-LAST:event_botonObtenerMostrarActionPerformed

    //Método para mostrar los submenus correspondientes, que se acciona al pulsar un botón 
    private void botonRealizarIngresoMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRealizarIngresoMostrarActionPerformed
        jTextArea1.setText("");
        campoCantidad.setText("");
        MenuIBAN.setVisible(true);
        MenuCantidad.setVisible(true);
        botonObtener.setVisible(false);
        botonIngresar.setVisible(true);
        botonRetirar.setVisible(false);
        botonConsultar.setVisible(false);
    }//GEN-LAST:event_botonRealizarIngresoMostrarActionPerformed

    //Método para mostrar los submenus correspondientes, que se acciona al pulsar un botón 
    private void botonRetirarEfectivoMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetirarEfectivoMostrarActionPerformed
        jTextArea1.setText("");
        campoCantidad.setText("");
        MenuIBAN.setVisible(true);
        MenuCantidad.setVisible(true);
        botonObtener.setVisible(false);
        botonIngresar.setVisible(false);
        botonRetirar.setVisible(true);
        botonConsultar.setVisible(false);
    }//GEN-LAST:event_botonRetirarEfectivoMostrarActionPerformed

    //Método para mostrar los submenus correspondientes, que se acciona al pulsar un botón 
    private void botonConsultarSaldoMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarSaldoMostrarActionPerformed
        jTextArea1.setText("");
        MenuIBAN.setVisible(true);
        MenuCantidad.setVisible(false);
        botonObtener.setVisible(false);
        botonIngresar.setVisible(false);
        botonRetirar.setVisible(false);
        botonConsultar.setVisible(true);
    }//GEN-LAST:event_botonConsultarSaldoMostrarActionPerformed

    /*Método para obtener información de una cuenta a través del IBAN, invocando a un método del objeto banco, 
    donde se valida que el campo IBAN no esté vacío y que sea del formato correcto, que se acciona al pulsar un botón */
    private void botonObtenerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonObtenerActionPerformed
        if (validarNoVacioIBANOperaciones() && validacionFormatoIBAN(campoIBANOperaciones.getText())) {
            if (banco.informacionCuenta(campoIBANOperaciones.getText()) != null) {
                jTextArea1.setText(banco.informacionCuenta(campoIBANOperaciones.getText()));
            } else {
                JOptionPane.showMessageDialog(this, "Cuenta inexistente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        };

    }//GEN-LAST:event_botonObtenerActionPerformed

    /*Método para ingresar saldo en una cuenta a través del IBAN, invocando a un método del objeto banco, 
    donde se valida que el campo IBAN no esté vacío y que sea del formato correcto, que se acciona al pulsar un botón */
    private void botonIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonIngresarActionPerformed
        if (validarNoVacioIBANOperaciones() && validacionFormatoIBAN(campoIBANOperaciones.getText()) && validarNoVacioCantidad() && validarCantidad(campoCantidad.getText())) {
            if (banco.ingresoCuenta(campoIBANOperaciones.getText(), Double.parseDouble(campoCantidad.getText()))) {
                jTextArea1.setText(banco.informacionCuenta(campoIBANOperaciones.getText()));
            } else {
                JOptionPane.showMessageDialog(this, "Cuenta inexistente", "Error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_botonIngresarActionPerformed

    private void campoMaximoDescubiertoPermitidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoMaximoDescubiertoPermitidoActionPerformed

    }//GEN-LAST:event_campoMaximoDescubiertoPermitidoActionPerformed

    /*Método para retirar saldo de una cuenta a través del IBAN, invocando a un método del objeto banco, 
    donde se valida que el campo IBAN no esté vacío y que sea del formato correcto, que se acciona al pulsar un botón */
    private void botonRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonRetirarActionPerformed
        if (validarNoVacioIBANOperaciones() && validacionFormatoIBAN(campoIBANOperaciones.getText()) && validarNoVacioCantidad() && validarCantidad(campoCantidad.getText())) {
            if (banco.retiradaCuenta(campoIBANOperaciones.getText(), Double.parseDouble(campoCantidad.getText()))) {;
                jTextArea1.setText(banco.informacionCuenta(campoIBANOperaciones.getText()));
            } else {
                JOptionPane.showMessageDialog(this, "Cuenta inexistente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botonRetirarActionPerformed

    /*Método para consultar saldo de una cuenta a través del IBAN, invocando a un método del objeto banco, 
    donde se valida que el campo IBAN no esté vacío y que sea del formato correcto, que se acciona al pulsar un botón */
    private void botonConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsultarActionPerformed
        if (validarNoVacioIBANOperaciones() && validacionFormatoIBAN(campoIBANOperaciones.getText())) {
            if (banco.obtenerSaldo(campoIBANOperaciones.getText()) != -1) {
                jTextArea1.setText("Saldo: " + String.valueOf(banco.obtenerSaldo(campoIBANOperaciones.getText())) + " €");
            } else {
                JOptionPane.showMessageDialog(this, "Cuenta inexistente", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_botonConsultarActionPerformed

    //Método para salir de la aplicación, que se acciona pulsando un botón
    private void SalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirActionPerformed
        System.exit(0);
    }//GEN-LAST:event_SalirActionPerformed

    //Método para eliminar cuenta, seleccionando los elementos del JComboBox. La cuenta solo se elimina si su saldo es cero, si no, sale el aviso correspondiente
    private void EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EliminarActionPerformed

        if (ListadoCuentas.getSelectedItem() != null) {
            int resultado = banco.eliminarCuenta(ListadoCuentas.getSelectedItem().toString());
            if (resultado == 1) {
                JOptionPane.showMessageDialog(this, "Cuenta eliminada con éxito", "Información", JOptionPane.INFORMATION_MESSAGE);
                ListadoCuentas.removeItem(ListadoCuentas.getSelectedItem());
            } else if (resultado == 0) {
                JOptionPane.showMessageDialog(this, "La cuenta no se puede eliminar porque su saldo es mayor que cero", "Información", JOptionPane.INFORMATION_MESSAGE);
            };
        } else {
            JOptionPane.showMessageDialog(this, "No hay cuentas creadas para eliminar", "Información", JOptionPane.INFORMATION_MESSAGE);
        }


    }//GEN-LAST:event_EliminarActionPerformed

    //Submenus con métodos de validación    
//<editor-fold defaultstate="collapsed" desc="Validaciones para abrir cuenta">
//<editor-fold defaultstate="collapsed" desc="Validaciones generales">
    //Método para validar que los campos no estén vacíos en los campos generales de todas las cuentas
    private boolean validarNoVaciosGenerales() {
        boolean validacion = true;
        try {
            if (campoNombre.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca el nombre", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
            if (campoApellidos.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca los apellidos", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
            if (campoDNI.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca DNI", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
            if (campoSaldoInicial.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca saldo inicial", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
            if (campoIBAN.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca IBAN", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }
        return validacion;
    }

    //Método para validar que el saldo sea un double
    private boolean validarSaldoInicial(String saldoInicial) {
        boolean validacion = true;
        try {
            double saldoInicialDouble = Double.parseDouble(saldoInicial);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Saldo inicial no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }

    //Método para validar que el formato del DNI sea correcto, llamando al método validacionDNI
    private boolean validacionFormatoDNI(String dni) {
        boolean validacion = true;
        if (!Validar.validacionDNI(dni)) {
            validacion = false;
            JOptionPane.showMessageDialog(this, "Formato DNI no válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return validacion;
    }

    //Método para validar que el formato del IBAN sea correcto, llamando al método validacionIBAN
    private boolean validacionFormatoIBAN(String iban) {
        boolean validacion = true;
        if (!Validar.validacionIBAN(iban)) {
            validacion = false;
            JOptionPane.showMessageDialog(this, "Formato IBAN no válido", "Error", JOptionPane.ERROR_MESSAGE);
        }
        return validacion;
    }

//</editor-fold>
//<editor-fold defaultstate="collapsed" desc="Validaciones cuenta de ahorro">
    //Método para validar que el campo tipo interés no esté vacio
    private boolean validarNoVacioCuentaAhorro() {
        boolean validacion = true;
        try {
            if (campoTipoInteres.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca tipo de interés", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return validacion;
    }

    //Método para validar que el tipo de interés sea un double
    private boolean validarTipoInteres(String tipoInteres) {
        boolean validacion = true;
        try {
            Double.parseDouble(tipoInteres);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El tipo de interés no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }

//</editor-fold>
//<editor-fold defaultstate="collapsed" desc="Validaciones cuenta corriente personal">
    //Método para validar que el campo comisión de mantenimiento no esté vacio
    private boolean validarNoVacioComisionMantenimiento() {
        boolean validacion = true;
        try {
            if (campoComisionMantenimiento.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca comisión mantenimiento", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        return validacion;
    }

    //Método para validar que la comisión de mantenimiento sea un double
    private boolean validarComisionMantenimiento(String ComisionMantenimiento) {
        boolean validacion = true;
        try {
            Double.parseDouble(ComisionMantenimiento);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La comisión de mantenimiento no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }

//</editor-fold>
//<editor-fold defaultstate="collapsed" desc="Validaciones cuenta corriente empresa">
    //Método para validar los campos propios de cuenta corriente empresa no estén vacíos
    private boolean validarNoVaciosCuentaCorrienteEmpresa() {
        boolean validacion = true;
        try {
            if (campoTipoInteresDescubierto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca el tipo de interés descubierto", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
            if (campoMaximoDescubiertoPermitido.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca máximo descubierto permitido", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
            if (campoComisionFijaDescubierto.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca comisión fija por descubierto", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }
        return validacion;
    }

    //Método para validar que el tipo interés descubierto es double
    private boolean validarTipoInteresDescubierto(String tipoInteresDescubierto) {
        boolean validacion = true;
        try {
            Double.parseDouble(tipoInteresDescubierto);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El tipo interés descubierto no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }

    //Método para validar que el máximo descubierto permitido es double
    private boolean validarMaximoDescubiertoPermitido(String maximoDescubiertoPermitido) {
        boolean validacion = true;
        try {
            Double.parseDouble(maximoDescubiertoPermitido);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El máximo descubierto permitido no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }

    //Método para validar que la comisión fija descubierto es double
    private boolean validarComisionFijaDescubierto(String comisionFijaDescubierto) {
        boolean validacion = true;
        try {
            Double.parseDouble(comisionFijaDescubierto);

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "La comisión fija por descubierto no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }
//</editor-fold>

//</editor-fold>
//<editor-fold defaultstate="collapsed" desc="Validaciones en las operaciones">
    //Método para validar que el campo IBAN en operaciones no está vacío
    private boolean validarNoVacioIBANOperaciones() {
        boolean validacion = true;
        try {
            if (campoIBANOperaciones.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca IBAN", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }
        return validacion;
    }

    //Método para validar que el campo cantidad no está vacío
    private boolean validarNoVacioCantidad() {
        boolean validacion = true;
        try {
            if (campoCantidad.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Introduzca una cantidad", "Error", JOptionPane.ERROR_MESSAGE);
                validacion = false;
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());

        }
        return validacion;
    }

    //Método para validar que el saldo sea un double
    private boolean validarCantidad(String cantidad) {
        boolean validacion = true;
        try {
            Double.parseDouble(cantidad);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Cantidad no es un número", "Error", JOptionPane.ERROR_MESSAGE);
            validacion = false;
        }
        return validacion;
    }
//</editor-fold>
    //Atributo
    private Banco banco;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Eliminar;
    private javax.swing.ButtonGroup GrupoCuentas;
    private javax.swing.JComboBox<String> ListadoCuentas;
    private javax.swing.JPanel MenuCantidad;
    private javax.swing.JPanel MenuCuentaAhorro;
    private javax.swing.JPanel MenuCuentaCorrienteEmpresa;
    private javax.swing.JPanel MenuCuentaCorrientePersonal;
    private javax.swing.JPanel MenuIBAN;
    private javax.swing.JPanel PanelAbrirNuevaCuenta;
    private javax.swing.JButton Salir;
    private javax.swing.JButton abrirNuevaCuenta;
    private javax.swing.JButton botonConsultar;
    private javax.swing.JButton botonConsultarSaldoMostrar;
    private javax.swing.JButton botonIngresar;
    private javax.swing.JButton botonObtener;
    private javax.swing.JButton botonObtenerMostrar;
    private javax.swing.JRadioButton botonRadioCuentaAhorro;
    private javax.swing.JRadioButton botonRadioCuentaCorrienteEmpresa;
    private javax.swing.JRadioButton botonRadioCuentaCorrientePersonal;
    private javax.swing.JButton botonRealizarIngresoMostrar;
    private javax.swing.JButton botonRetirar;
    private javax.swing.JButton botonRetirarEfectivoMostrar;
    private javax.swing.JTextField campoApellidos;
    private javax.swing.JTextField campoCantidad;
    private javax.swing.JTextField campoComisionFijaDescubierto;
    private javax.swing.JTextField campoComisionMantenimiento;
    private javax.swing.JTextField campoDNI;
    private javax.swing.JTextField campoIBAN;
    private javax.swing.JTextField campoIBANOperaciones;
    private javax.swing.JTextField campoMaximoDescubiertoPermitido;
    private javax.swing.JTextField campoNombre;
    private javax.swing.JTextField campoSaldoInicial;
    private javax.swing.JTextField campoTipoInteres;
    private javax.swing.JTextField campoTipoInteresDescubierto;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton listadoCuentas;
    private javax.swing.JButton validarCuentaAnadir;
    // End of variables declaration//GEN-END:variables

}
